//
//  TransactionObject.m
//  Balance
//
//  Created by Chris Nolet on 4/21/16.
//  Copyright Â© 2016 Relaunch. All rights reserved.
//

#import "TransactionObject.h"
#import "NSDateFormatter+DateFormat.h"

@implementation TransactionObject

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark - RLMObject

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
+ (NSString *)primaryKey
{
    return @"transactionId";
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark - Class methods

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
+ (RLMResults *)allObjectsByDate
{
    RLMResults *results = [self allObjects];

    return [results sortedResultsUsingProperty:@"date" ascending:NO];
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark - NSObject

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
- (instancetype)initWithDictionary:(NSDictionary *)dictionary
{
    self = [super init];

    if (self) {
        self.transactionId = dictionary[@"_id"];
        self.name = dictionary[@"name"];
        self.amount = dictionary[@"amount"];
        self.pending = dictionary[@"pending"];
        self.date = [NSDateFormatter dateFromString:dictionary[@"date"] dateFormat:@"yyyy-MM-dd"];
    }

    return self;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark - Property methods

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
- (double)signedAmount
{
    // Return negative amounts for outgoing amounts
    return -[self.amount doubleValue];
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
- (NSString *)formattedAmount
{
    // Format the transaction amount
    NSNumberFormatter *numberFormatter = [[NSNumberFormatter alloc] init];
    numberFormatter.numberStyle = NSNumberFormatterCurrencyStyle;

    return [numberFormatter stringFromNumber:@(self.signedAmount)];
}

@end
